{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "card-18",
  "type": "registry:component",
  "registryDependencies": [
    "card"
  ],
  "files": [
    {
      "path": "src/registry/new-york/components/card/card-18.tsx",
      "content": "'use client'\n\nimport { useEffect, useRef } from 'react'\n\nimport { Card, CardContent, CardHeader, CardTitle } from '@/registry/new-york/ui/card'\n\ninterface CardTransform {\n  rotateX: number\n  rotateY: number\n  scale: number\n}\n\nconst Card3dDemo = () => {\n  const cardRef = useRef<HTMLDivElement>(null)\n  const imageRef = useRef<HTMLImageElement>(null)\n  const animationFrameRef = useRef<number | undefined>(undefined)\n  const lastMousePosition = useRef({ x: 0, y: 0 })\n\n  useEffect(() => {\n    const card = cardRef.current\n    const image = imageRef.current\n\n    if (!card || !image) return\n\n    let rect: DOMRect\n    let centerX: number\n    let centerY: number\n\n    const updateCardTransform = (mouseX: number, mouseY: number) => {\n      if (!rect) {\n        rect = card.getBoundingClientRect()\n        centerX = rect.left + rect.width / 2\n        centerY = rect.top + rect.height / 2\n      }\n\n      const relativeX = mouseX - centerX\n      const relativeY = mouseY - centerY\n\n      const cardTransform: CardTransform = {\n        rotateX: -relativeY * 0.05,\n        rotateY: relativeX * 0.05,\n        scale: 1.025\n      }\n\n      const imageTransform: CardTransform = {\n        rotateX: -relativeY * 0.025,\n        rotateY: relativeX * 0.025,\n        scale: 1.05\n      }\n\n      return { cardTransform, imageTransform }\n    }\n\n    const animate = () => {\n      const { cardTransform, imageTransform } = updateCardTransform(\n        lastMousePosition.current.x,\n        lastMousePosition.current.y\n      )\n\n      card.style.transform = `perspective(1000px) rotateX(${cardTransform.rotateX}deg) rotateY(${cardTransform.rotateY}deg) scale3d(${cardTransform.scale}, ${cardTransform.scale}, ${cardTransform.scale})`\n      card.style.boxShadow = '0 15px 35px rgba(0, 0, 0, 0.2)'\n\n      image.style.transform = `perspective(1000px) rotateX(${imageTransform.rotateX}deg) rotateY(${imageTransform.rotateY}deg) scale3d(${imageTransform.scale}, ${imageTransform.scale}, ${imageTransform.scale})`\n\n      animationFrameRef.current = requestAnimationFrame(animate)\n    }\n\n    const handleMouseMove = (e: MouseEvent) => {\n      lastMousePosition.current = { x: e.clientX, y: e.clientY }\n    }\n\n    const handleMouseEnter = () => {\n      card.style.transition = 'transform 0.2s ease, box-shadow 0.2s ease'\n      image.style.transition = 'transform 0.2s ease'\n      animate()\n    }\n\n    const handleMouseLeave = () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current)\n      }\n\n      card.style.transform = 'perspective(1000px) rotateX(0) rotateY(0) scale3d(1, 1, 1)'\n      card.style.boxShadow = 'none'\n      card.style.transition = 'transform 0.5s ease, box-shadow 0.5s ease'\n\n      image.style.transform = 'perspective(1000px) rotateX(0) rotateY(0) scale3d(1, 1, 1)'\n      image.style.transition = 'transform 0.5s ease'\n    }\n\n    card.addEventListener('mouseenter', handleMouseEnter)\n    card.addEventListener('mousemove', handleMouseMove)\n    card.addEventListener('mouseleave', handleMouseLeave)\n\n    return () => {\n      if (animationFrameRef.current) {\n        cancelAnimationFrame(animationFrameRef.current)\n      }\n\n      card.removeEventListener('mouseenter', handleMouseEnter)\n      card.removeEventListener('mousemove', handleMouseMove)\n      card.removeEventListener('mouseleave', handleMouseLeave)\n    }\n  }, [])\n\n  return (\n    <Card ref={cardRef} className='max-w-100'>\n      <CardHeader>\n        <CardTitle>Dynamic 3D Hover Card</CardTitle>\n      </CardHeader>\n      <CardContent className='space-y-6 text-sm'>\n        <img\n          ref={imageRef}\n          src='https://cdn.shadcnstudio.com/ss-assets/components/card/image-10.png?width=350&format=auto'\n          alt='Banner'\n          className='aspect-video w-full rounded-md object-cover'\n          width={500}\n          height={500}\n        />\n        <p>\n          Experience interactive depth and motion with this sleek 3D hover effect. Move your cursor to see it come\n          alive!\n        </p>\n      </CardContent>\n    </Card>\n  )\n}\n\nexport default Card3dDemo\n",
      "type": "registry:component",
      "target": "components/shadcn-studio/card/card-18.tsx"
    }
  ],
  "meta": {
    "isAnimated": true
  }
}